export class Client {
    constructor(target: any, options: any);
    target: any;
    syslogHostname: any;
    port: any;
    tcpTimeout: any;
    getTransportRequests: any;
    facility: any;
    severity: any;
    rfc3164: any;
    appName: any;
    dateFormatter: any;
    transport: any;
    addListener(type: any, listener: any): any;
    buildFormattedMessage(message: any, options: any): any;
    close(): any;
    emit(type: any, ...args: any[]): any;
    eventNames(): any;
    getMaxListeners(): any;
    getTransport(cb: any): any;
    listenerCount(type: any): any;
    listeners(type: any): any;
    log(...args: any[]): any;
    on(type: any, listener: any): any;
    onClose(): any;
    onError(error: any): any;
    once(type: any, listener: any): any;
    prependListener(type: any, listener: any): any;
    prependOnceListener(type: any, listener: any): any;
    removeAllListeners(type: any, ...args: any[]): any;
    removeListener(type: any, listener: any): any;
    setMaxListeners(n: any): any;
}
export const Facility: {
    0: number;
    1: number;
    13: number;
    14: number;
    16: number;
    17: number;
    18: number;
    19: number;
    20: number;
    21: number;
    22: number;
    23: number;
    3: number;
    Alert: number;
    Audit: number;
    Kernel: number;
    Local0: number;
    Local1: number;
    Local2: number;
    Local3: number;
    Local4: number;
    Local5: number;
    Local6: number;
    Local7: number;
    System: number;
    User: number;
};
export const Severity: {
    0: number;
    1: number;
    2: number;
    3: number;
    4: number;
    5: number;
    6: number;
    7: number;
    Alert: number;
    Critical: number;
    Debug: number;
    Emergency: number;
    Error: number;
    Informational: number;
    Notice: number;
    Warning: number;
};
export const Transport: {
    1: number;
    2: number;
    Tcp: number;
    Udp: number;
};
export function createClient(target: any, options?: any): any;
